<link rel="stylesheet" href="/css/config_buliding.css">
<div class="container">
  <h4 class="fw-bold">บันทึกข้อมูลอาคาร</h4>
  <div class="wrapper-page">
    <p class="fw-bold text-lightgray border-radius-12" style="padding: 2px 12px ;">
      สำหรับ หมายเลขอาคาร หรือ ชื่ออาคาร เลือกป้อนอย่างน้อย 1 ช่อง
    </p>
    <div class="input-group my-3">
      <span class="input-group-text">

        ชื่ออาคาร / ตึก
        <i class="fa-solid fa-building"></i>
      </span>
      <input type="text" class="form-control" placeholder="ป้อนชื่อตึก หรือ อาคาร" id="building-name">
    </div>
    <div class="input-group my-3">
      <span class="input-group-text">

        หมายเลขอาคาร / ตึก
        <i class="fa-solid fa-box"></i>
      </span>
      <input type="text" class="form-control" placeholder="ป้อนหมายเลขตึก หรือ อาคาร " id="building-number">
    </div>
    <p class="empty-validate" id="validate-buildingname"></p>
    <div class="input-400 my-3">
      <div class="input-group">
        <span class="input-group-text">
          จำนวนชั้น
          <i class="fa-solid fa-list-ul"></i>
        </span>
        <input type="number" class="form-control" placeholder="ป้อนจำนวนชั้น" id="number-floor" min="1">
      </div>
      <p class="empty-validate" id="validate-numberfloor"></p>
    </div>

    <button class="fw-bold ac-btn border-radius-7 bg-violet" id="building-submit">
      <i class="fa-solid fa-plus"></i>
      บันทึก
    </button>
  </div>
  <div class="wrapper-content-page">
    <% if(entries.length ==0) { %>
    <div class="empty-table">
      <div class="empty-icon-table text-darkgray">
        <i class="fa-solid fa-circle-exclamation"></i>
      </div>
      <h6 class="fw-bold">ไม่มีข้อมูล</h6>
    </div>
    <%  } else {  %>
    <div class="entries-d">
      <span class="entries-text">แสดง</span>
      <span class="entries-count">
        <%= entries.length  %>
      </span>
      <span>
        รายการ
      </span>
    </div>
    <div class="table-responsive">
      <table class="table">
        <thead>
          <tr class="align-middle">
            <th style="width:5% ;">รายการ</th>
            <th style="width:35% ;">หมายเลขอาคาร</th>
            <th style="width:25% ;">ชื่ออาคาร</th>
            <th class="text-center" style="width:15% ;">จำนวนชั้น</th>
            <th class="text-center" style="width:5% ;">แก้ไข</th>
            <th class="text-center" style="width:5% ;">ลบ</th>
          </tr>
        </thead>
        <tbody>
          <% for(let i =0 ;i<entries.length;i++) { %>
          <tr class="align-middle">
            <td><%= i+1  %></td>
            <td><%= entries[i].building_number !=''? entries[i].building_number : 'ไม่ระบุ'  %></td>
            <td><%= entries[i].building_name !='' ? entries[i].building_name : 'ไม่ระบุ'   %></td>
            <td class="text-center"><%= entries[i].floor_count %></td>
            <td class="text-center">
              <button class="fw-bold ac-btn text-darkgray bg-none edit-building" data-id="<%= entries[i].building_id  %>">
                <i class="fa-solid fa-pen-to-square"></i>
              </button>
            </td>
            <td class="text-center">
              <button class="fw-bold ac-btn text-darkgray bg-none delete-building" data-id="<%= entries[i].building_id  %>">
                <i class="fa-solid fa-trash-can"></i>
              </button>
            </td>
          </tr>
          <% } %>
        </tbody>
      </table>
    </div>
    <%  } %>
  </div>


</div>
<script>
  $('.edit-building').click(function() {
    window.location.assign(`/admin?p=building-edit&id=${$(this).attr('data-id')}`)
  })
  $('.delete-building').click(function() {
    confirm('ลบข้อมูลอาคาร', 'คุณต้องการลบข้อมูลอาคาร รายการนี้ใช่ หรือไม่').then((result) => {
      if (result.isConfirmed) {
        axios.post('/api/delete-building', {
            'building_id': $(this).attr('data-id')
          })
          .then((res) => {
            const result = res.data.result
            if (result) {
              querySuccess('ลบเรียบร้อย', 1000)
            }
            if (!result) {
              queryFail('ลบข้อมูลอาคาร', 'ลบข้อมูลไม่สำเร็จ', res.data.err)
            }
          })
          .catch((err) => {
            statusErr()
          })
      }
    })

  })

  const formAndValidate = [{
      'name': 'building_name',
      'input': [$('#building-name'), $('#building-number')],
      'validate': $('#validate-buildingname'),
      'msg': 'กรุณาป้อนอย่างน้อย 1 ช่อง'
    },

    {
      'name': 'number-floor',
      'input': $('#number-floor'),
      'validate': $('#validate-numberfloor'),
      'msg': 'กรุณากรอกจำนวนชั้น'
    }
  ]
  const numberFloor = $('#number-floor')
  const buildingDetailItems = $('#building-detail-items')
  const createBuidingItem = $('#create-buiding-item')
  const buildingSubmit = $('#building-submit')

  numberFloor.keyup(function() {
    console.log('d')
    const v = Number.parseInt($(this).val().trim())
    const {
      validate
    } = formAndValidate[1]
    if (isNaN(v) == true) {
      $(this).val('')
      validateformEmpty(true, validate, 'ป้อนข้อมูลที่เป็นตัวเลขเท่านั้น')
    } else {
      validateformEmpty(false, validate, '')
    }
  })

  buildingSubmit.click(function() {
    let emptyCount = 0
    formAndValidate.forEach((fd, i) => {
      const {
        validate,
        msg
      } = fd
      if (i == 0) {
        const inputEl = fd.input
        const inputCount = inputEl.filter((e, i) => $(e).val().trim() != '').length

        if (inputCount == 0) {
          emptyCount++
          validateformEmpty(true, validate, msg)
        } else {
          validateformEmpty(false, validate, '')
        }
      } else {
        const v = $(fd.input).val().trim()
        const count = Number.parseInt(v)
        if (v == '') {
          emptyCount++
          validateformEmpty(true, validate, msg)
        } else if (v != '') {
          validateformEmpty(false, validate, '')
        }
      }
    })

    const data = {
      'building_name': formAndValidate[0].input[0].val(),
      'building_number': formAndValidate[0].input[1].val(),
      'number_floor': formAndValidate[1].input.val()
    }
    if (emptyCount == 0) {
      axios.post('/api/insert-building', data)
        .then((res) => {
          const result = res.data.result
          if (result == true) {
            Swal.fire({
              position: 'top',
              icon: 'success',
              title: 'บันทึกสำเร็จ',
              showConfirmButton: false,
              timer: 1200
            })

            setInterval(() => {
              window.location.reload()
            }, 1200)
          } else {
            Swal.fire({
              icon: 'error',
              title: 'การบันทึกข้อมูล',
              text: 'บันทึกข้อมูลล้มเหลว',
              footer: res.data.err
            })
          }
        })
        .catch(function(error) {
          statusErr()
        });
    }
  })
</script>